spring.application.name=recommendation-system-ms

# api and kafka topics
user.action.topic.name=user_actions
# kafka
spring.kafka.bootstrap-servers=localhost:9092,localhost:9093,localhost:9094
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=io.confluent.kafka.serializers.KafkaAvroSerializer
spring.kafka.consumer.value-deserializer=io.confluent.kafka.serializers.KafkaAvroDeserializer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.properties.default.deserialization.exception.handler=org.apache.kafka.clients.consumer.internals.DefaultDeserializationExceptionHandler
spring.kafka.properties.schema.registry.url=http://localhost:8081
#spring.kafka.properties.specific.avro.reader=true
spring.kafka.properties.auto.register.schemas=false
# kafka streams
spring.kafka.streams.application-id=recommendation-stream
spring.kafka.streams.bootstrap-servers=localhost:9092,localhost:9093,localhost:9094
spring.kafka.streams.properties.schema.registry.url=http://localhost:8081
# metrics
management.endpoints.web.exposure.include=health,info,prometheus
management.endpoint.prometheus.enabled=true
#swagger
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.path=/v3/api-docs.yaml
springdoc.api-docs.enabled=true
springdoc.swagger-ui.enabled=true